---
- name: Install MongoDB on Ubuntu 22.04
  hosts: ubuntu_servers
  become: true

  vars_files:
    - vars_mongo.yml

  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Check Ubuntu version
      command: lsb_release -rs
      register: ubuntu_version

    - name: Check if focal-security repository exists
      stat:
        path: /etc/apt/sources.list.d/focal-security.list
      register: focal_security_repo

    - name: Add focal-security repository
      shell: echo "deb http://security.ubuntu.com/ubuntu focal-security main" | sudo tee /etc/apt/sources.list.d/focal-security.list
      when: ubuntu_version.stdout == "22.04" and not focal_security_repo.stat.exists

    - name: Update apt cache
      apt:
        update_cache: yes
      when: ubuntu_version.stdout == "22.04"

    - name: Install libssl1.1
      apt:
        name: libssl1.1
        state: present
      when: ubuntu_version.stdout == "22.04"

    - name: Installing dependancies
      package:
         name: "{{item}}"
         state: present
         update_cache: yes
      loop:
        - curl
        - gnupg
        - python3-pip
      become: yes

    - name: Install pymongo
      pip:
        name: pymongo

    - name: Check if MongoDB APT keyring exists
      stat:
        path: /usr/share/keyrings/mongo-key.gpg
      register: mongo_keyring_exists

    - name: Add MongoDB APT keyring
      shell: "curl -fsSL https://www.mongodb.org/static/pgp/server-{{ mongodb_version }}.asc | sudo gpg --dearmour -o /usr/share/keyrings/mongo-key.gpg"
      args:
        executable: /bin/bash
      when: not mongo_keyring_exists.stat.exists

    - name: Check if MongoDB repository exists
      stat:
        path: /etc/apt/sources.list.d/mongodb-org-{{ mongodb_version }}.list
      register: mongo_repository_exists

    - name: Add MongoDB repository
      shell: sudo sh -c 'echo deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongo-key.gpg] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/{{ mongodb_version }} multiverse > /etc/apt/sources.list.d/mongodb-org-{{ mongodb_version }}.list'
      args:
        executable: /bin/bash
      when: not mongo_repository_exists.stat.exists

    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install MongoDB packages
      apt:
        name: mongodb-org
        state: latest

    - name: Enable and start MongoDB service
      service:
        name: mongod
        state: started
        enabled: yes

    - name: Create MongoDB root user
      mongodb_user:
        login_port: "27017"
        database: "admin"
        name: "{{ mongodb_root_user }}"
        password: "{{ mongodb_root_password }}"
        roles: "root"

    - name: Create MongoDB administrative user siteUserAdmin
      mongodb_user:
        login_user: "{{ mongodb_root_user }}"
        login_password: "{{ mongodb_root_password }}"
        login_port: "27017"
        database: "{{ database_name }}"
        name: "{{ mongodb_admin_user }}"
        password: "{{ mongodb_admin_password }}"
        roles:
          - { db: "admin", role: "readWrite" }
          - { db: "{{ database_name }}", role: "readWrite" }

    - name: Create MongoDB backup user siteUserBackup
      mongodb_user:
        login_user: "{{ mongodb_root_user }}"
        login_password: "{{ mongodb_root_password }}"
        login_port: "27017"
        database: "{{ database_name }}"
        name: "{{ mongodb_backup_user }}"
        password: "{{ mongodb_backup_password }}"
        roles:
          - { db: "admin", role: "backup" }

    - name: Enable remote connections in MongoDB
      lineinfile:
        path: /etc/mongod.conf
        regexp: '^ *bindIp:.*'
        line: '  bindIp: 0.0.0.0'
        state: present
        backup: yes
      notify:
        - Restart MongoDB Service

    - name: Enable authentication in MongoDB
      lineinfile:
        path: /etc/mongod.conf
        line: "security:\n  authorization: enabled"
        insertafter: "^#security:"
        state: present
        backup: yes
      notify: 
        - Restart MongoDB Service

  handlers:
    - name: Restart MongoDB Service
      service:
        name: mongod
        state: restarted